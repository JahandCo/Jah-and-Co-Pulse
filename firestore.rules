rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is admin by UID
    // IMPORTANT: Add your admin UIDs here to match admin-config.js
    function isAdmin() {
      return isAuthenticated() && request.auth.uid in [
        // Add admin UIDs here - must match admin-config.js ADMIN_UIDS array
        // Example: 'abc123xyz456def789ghi',
      ];
    }
    
    // Helper function to check if user is moderator
    function isModerator() {
      return isAuthenticated() && exists(/databases/$(database)/documents/userRoles/$(request.auth.uid))
        && get(/databases/$(database)/documents/userRoles/$(request.auth.uid)).data.role in ['moderator', 'vip', 'admin'];
    }
    
    // Helper function to check if user owns the resource
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // User profiles
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && isOwner(userId);
      allow update: if isOwner(userId) 
        && (!('displayName' in request.resource.data) 
        || request.resource.data.displayName != 'Jah and Co'); // Prevent impersonation
      allow delete: if isAdmin();
    }
    
    // User roles (admin, moderator, VIP)
    match /userRoles/{userId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin(); // Only admins can assign roles
    }
    
    // Timeline posts
    match /posts/{postId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() 
        && request.resource.data.authorId == request.auth.uid;
      allow update: if isOwner(resource.data.authorId) || isAdmin();
      allow delete: if isOwner(resource.data.authorId) || isAdmin() || isModerator();
      
      // Post reactions (emoji reactions)
      match /reactions/{reactionId} {
        allow read: if isAuthenticated();
        allow create: if isAuthenticated();
        allow delete: if isOwner(resource.data.userId) || isAdmin();
      }
      
      // Post comments
      match /comments/{commentId} {
        allow read: if isAuthenticated();
        allow create: if isAuthenticated() 
          && request.resource.data.authorId == request.auth.uid;
        allow update: if isOwner(resource.data.authorId) || isAdmin();
        allow delete: if isOwner(resource.data.authorId) || isAdmin() || isModerator();
      }
    }
    
    // Board posts (polls and discussions)
    match /board/{postId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() 
        && request.resource.data.authorId == request.auth.uid;
      allow update: if isOwner(resource.data.authorId) || isAdmin();
      allow delete: if isOwner(resource.data.authorId) || isAdmin() || isModerator();
    }
    
    // Groups
    match /groups/{groupId} {
      allow read: if isAuthenticated();
      allow create: if isAdmin(); // Only admins can create groups
      allow update: if isAdmin();
      allow delete: if isAdmin();
      
      // Group posts
      match /posts/{postId} {
        allow read: if isAuthenticated() 
          && (resource == null || request.auth.uid in get(/databases/$(database)/documents/groups/$(groupId)).data.members);
        allow create: if isAuthenticated() 
          && request.auth.uid in get(/databases/$(database)/documents/groups/$(groupId)).data.members
          && request.resource.data.authorId == request.auth.uid;
        allow update: if isOwner(resource.data.authorId) || isAdmin();
        allow delete: if isOwner(resource.data.authorId) || isAdmin() || isModerator();
      }
    }
    
    // Chat channels
    match /channels/{channelId} {
      allow read: if isAuthenticated();
      allow create: if isAdmin(); // Only admins can create channels
      allow update: if isAdmin();
      allow delete: if isAdmin();
      
      // Channel messages
      match /messages/{messageId} {
        allow read: if isAuthenticated();
        allow create: if isAuthenticated() 
          && request.resource.data.authorId == request.auth.uid;
        allow update: if isOwner(resource.data.authorId) || isAdmin(); // Allow message editing
        allow delete: if isOwner(resource.data.authorId) || isAdmin() || isModerator();
        
        // Message reactions
        match /reactions/{reactionId} {
          allow read: if isAuthenticated();
          allow create: if isAuthenticated();
          allow delete: if isOwner(resource.data.userId) || isAdmin();
        }
        
        // Read receipts
        match /readReceipts/{userId} {
          allow read: if isAuthenticated();
          allow write: if isOwner(userId);
        }
      }
    }
    
    // Channel categories (for organizing channels)
    match /channelCategories/{categoryId} {
      allow read: if isAuthenticated();
      allow create: if isAdmin();
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }
    
    // Direct messages (private messages between users)
    match /directMessages/{conversationId} {
      allow read: if isAuthenticated() 
        && (request.auth.uid in resource.data.participants);
      allow create: if isAuthenticated() 
        && request.auth.uid in request.resource.data.participants;
      allow update: if isAuthenticated() 
        && request.auth.uid in resource.data.participants;
      allow delete: if isAdmin();
      
      // Messages in DM conversation
      match /messages/{messageId} {
        allow read: if isAuthenticated() 
          && request.auth.uid in get(/databases/$(database)/documents/directMessages/$(conversationId)).data.participants;
        allow create: if isAuthenticated() 
          && request.auth.uid in get(/databases/$(database)/documents/directMessages/$(conversationId)).data.participants
          && request.resource.data.authorId == request.auth.uid;
        allow update: if isOwner(resource.data.authorId) || isAdmin();
        allow delete: if isOwner(resource.data.authorId) || isAdmin();
        
        // Read receipts for DMs
        match /readReceipts/{userId} {
          allow read: if isAuthenticated() 
            && request.auth.uid in get(/databases/$(database)/documents/directMessages/$(conversationId)).data.participants;
          allow write: if isOwner(userId);
        }
      }
    }
    
    // Admin activity log (audit trail)
    match /adminLogs/{logId} {
      allow read: if isAdmin(); // Only admins can view logs
      allow create: if isAdmin(); // Logs created by admin actions
      allow update: if false; // Logs are immutable
      allow delete: if false; // Logs cannot be deleted
    }
    
    // File uploads metadata
    match /uploads/{uploadId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() 
        && request.resource.data.uploadedBy == request.auth.uid;
      allow delete: if isOwner(resource.data.uploadedBy) || isAdmin();
    }
  }
}
